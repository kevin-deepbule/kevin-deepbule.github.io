<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>javascript中的深拷贝的方式总结</title>
    <url>/2021/02/01/MyFirstBlog/</url>
    <content><![CDATA[<h1 id="javascript中的深拷贝的方式总结"><a href="#javascript中的深拷贝的方式总结" class="headerlink" title="javascript中的深拷贝的方式总结"></a>javascript中的深拷贝的方式总结</h1><a id="more"></a>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>深拷贝指拷贝多层数据，每一层的数据都会被拷贝</p>
<h1 id="一、使用递归实现深拷贝（函数不支持）"><a href="#一、使用递归实现深拷贝（函数不支持）" class="headerlink" title="一、使用递归实现深拷贝（函数不支持）"></a>一、使用递归实现深拷贝（函数不支持）</h1><h2 id="方法一：第一个参数是拷贝后数据的存储对象，第二个时候拷贝的对象"><a href="#方法一：第一个参数是拷贝后数据的存储对象，第二个时候拷贝的对象" class="headerlink" title="方法一：第一个参数是拷贝后数据的存储对象，第二个时候拷贝的对象"></a>方法一：第一个参数是拷贝后数据的存储对象，第二个时候拷贝的对象</h2><h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><p>利用for in 把对象或数组中的值取出来，判断类型后赋值或递归</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DeepReproduce</span>(<span class="params">reproduce_obj, obj</span>) </span>&#123; <span class="comment">//对对象进行复制</span></span><br><span class="line">       <span class="keyword">if</span> (obj &amp;&amp; <span class="keyword">typeof</span> obj == <span class="string">&quot;object&quot;</span>) &#123; <span class="comment">//传入的不能是null 和 function   </span></span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> obj) &#123;</span><br><span class="line">               <span class="keyword">if</span> (obj.hasOwnProperty(k)) &#123;</span><br><span class="line">                   <span class="keyword">if</span> (<span class="keyword">typeof</span> obj[k] == <span class="string">&#x27;object&#x27;</span>)&#123;</span><br><span class="line">                       reproduce_obj[k] = <span class="built_in">Array</span>.isArray(obj[k]) ? [] : &#123;&#125;;<span class="comment">//判断数组还是对</span></span><br><span class="line">                       DeepReproduce(reproduce_obj[k], obj[k]);</span><br><span class="line">                   &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                       reproduce_obj[k] = obj[k];</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">       	reproduce = <span class="literal">null</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>测试代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">        id: <span class="number">1</span>,</span><br><span class="line">        hobbies:[<span class="string">&quot;play basketball play football&quot;</span>],</span><br><span class="line">        name: <span class="string">&quot;ykw&quot;</span>,</span><br><span class="line">        age: <span class="number">22</span>,</span><br><span class="line">        o: &#123;</span><br><span class="line">            id: <span class="number">2</span>,</span><br><span class="line">            name: <span class="string">&quot;qwq&quot;</span>,</span><br><span class="line">            o_o: &#123;</span><br><span class="line">                id: <span class="number">67</span>,</span><br><span class="line">                name: <span class="string">&quot;o_o&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        think: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;think&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    obj.__proto__.sayHi = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;nihao&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    obj.__proto__.pro = <span class="string">&quot;pro&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">    DeepReproduce(a, obj);</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">    <span class="built_in">console</span>.log(a.pro);</span><br><span class="line">    <span class="built_in">console</span>.log(a.o == obj.o);</span><br></pre></td></tr></table></figure>
<p>运行结果：<br><img src="https://img-blog.csdnimg.cn/20210131145545882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0Mzg4NDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="方法二：return-的对象是拷贝后数据的存储对象；"><a href="#方法二：return-的对象是拷贝后数据的存储对象；" class="headerlink" title="方法二：return 的对象是拷贝后数据的存储对象；"></a>方法二：return 的对象是拷贝后数据的存储对象；</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MultiDeep</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (obj === <span class="literal">null</span> || <span class="keyword">typeof</span> obj !== <span class="string">&#x27;object&#x27;</span>) <span class="keyword">return</span> obj;</span><br><span class="line">        <span class="keyword">var</span> reproduce_obj = obj <span class="keyword">instanceof</span> <span class="built_in">Array</span> ? [] : &#123;&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> obj) &#123;</span><br><span class="line">            <span class="keyword">if</span>(obj.hasOwnProperty(k))</span><br><span class="line">            reproduce_obj[k] = MultiDeep(obj[k]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> reproduce_obj;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h2><p>测试代码，obj 和上面一致</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = MultiDeep(obj);</span><br><span class="line">   <span class="built_in">console</span>.log(a);</span><br><span class="line">   <span class="built_in">console</span>.log(a.pro);</span><br><span class="line">   <span class="built_in">console</span>.log(a.o == obj.o);</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210131150354679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0Mzg4NDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="二、使用JSON实现对象深拷贝"><a href="#二、使用JSON实现对象深拷贝" class="headerlink" title="二、使用JSON实现对象深拷贝"></a>二、使用JSON实现对象深拷贝</h1><h2 id="思路：-1"><a href="#思路：-1" class="headerlink" title="思路："></a>思路：</h2><p>把对象转换成json字符串,再把json字符串转换成对象<br>传入的obj和前面相同</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DeepReproduce2</span>(<span class="params">obj</span>) </span>&#123; <span class="comment">//对对象进行复制</span></span><br><span class="line">       <span class="keyword">let</span> obj_str = <span class="built_in">JSON</span>.stringify(obj);</span><br><span class="line">       <span class="keyword">let</span> reproduce_obj = <span class="built_in">JSON</span>.parse(obj_str);</span><br><span class="line">       <span class="keyword">return</span> reproduce_obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> a = DeepReproduce2(obj);</span><br><span class="line">    a.think = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;athink&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">    a.think();</span><br><span class="line">    obj.think();</span><br></pre></td></tr></table></figure>
<p>测试结果：可以看出引用对象函数也进行了深拷贝，真是好方法。<br><img src="https://img-blog.csdnimg.cn/2021013115160936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0Mzg4NDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="三、使用-extend实现对象深拷贝"><a href="#三、使用-extend实现对象深拷贝" class="headerlink" title="三、使用$.extend实现对象深拷贝"></a>三、使用$.extend实现对象深拷贝</h1><h2 id="思路：-2"><a href="#思路：-2" class="headerlink" title="思路："></a>思路：</h2><p>jQuery.extend() 函数用于将一个或多个对象的内容合并到目标对象。<br>指示是否深度合并<br>$.extend( [deep ], target, object1 [, objectN ] )</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = $.extend(<span class="literal">true</span>,&#123;&#125;,obj);</span><br><span class="line">    a.think = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;athink&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">    <span class="built_in">console</span>.log(a.o==obj.o)</span><br><span class="line">    a.think();</span><br><span class="line">    obj.think();</span><br></pre></td></tr></table></figure>
<p>测试结果：如下图，竟然把要复制对象的__protot__复制过来了，不太好</p>
<p><img src="https://img-blog.csdnimg.cn/20210131152922381.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0Mzg4NDc2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><font color=#999AAA >加快学习速度！！！！！！！！！！！！！！！！</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>tags</tag>
      </tags>
  </entry>
  <entry>
    <title>ceshi_tuijiang</title>
    <url>/2021/02/02/ceshi-tuijiang/</url>
    <content><![CDATA[<p>##这是运来测试推荐的makedown</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/02/02/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>test_tag</title>
    <url>/2021/02/01/test-tag/</url>
    <content><![CDATA[<h2 id="这个是guestbook"><a href="#这个是guestbook" class="headerlink" title="这个是guestbook"></a>这个是guestbook</h2>]]></content>
      <categories>
        <category>搭建博客练习</category>
      </categories>
      <tags>
        <tag>tags</tag>
      </tags>
  </entry>
</search>
